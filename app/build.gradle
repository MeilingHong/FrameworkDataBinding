import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.meiling.framework"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // todo 1、开启DataBinding的支持【Google的绑定框架】
    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmss")
        def dateFlag = dateFormat.format(new Date())
        variant.outputs.all {
//            def flavorFlag = variant.flavorName // 如果有渠道的话，显示对应的渠道信息（名称）
//            def newName = "v" + variant.versionName + "_" + variant.versionCode + "_" + flavorFlag + "_" + dateFlag + ".apk"
//            def newName = "v" + variant.versionName + "_" + variant.versionCode + "_" + buildType.name + "_" + dateFlag + ".apk"
            def newName = "app-" + buildType.name + ".apk"
            outputFileName = newName// todo 指定APK的输出文件名
            variant.getPackageApplication().outputDirectory = new File("D:/Function/apk") // todo 指定了APK文件的输出路径
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 分包
    implementation 'com.android.support:multidex:1.0.3'

    implementation "androidx.recyclerview:recyclerview:1.1.0"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //ConverterFactory的Gson依赖包
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //CallAdapterFactory的Rx依赖包
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // CameraX core library
    def camerax_version = '1.0.0-rc01'
    implementation "androidx.camera:camera-core:$camerax_version"

    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class CameraX使用【说是能从Android5.0往上兼容】
    implementation 'androidx.camera:camera-view:1.0.0-alpha20'

    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}